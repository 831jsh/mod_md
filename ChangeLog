 * adding test and fixes for new config directive 'MDCAChallenges' when no configured challenge
   type is supported by the ACME server.

v0.3.0
----------------------------------------------------------------------------------------------------
 * Adding test case coverage for own base64url coder.
 * ACME challenge type "tls-sni-01" supported. Needs new mod_ssl patch 
   (patches/mod_ssl_md-trunk-v2.diff).
 * Merged check based unit test infrastructure by the awesome 
   [Jacob Champion](https://github.com/jchampio) and linked them to standard 'make test'
 * Using ${prefix}/bin/curl if available. Fixed test cases that failed when curl has SNI
   support.
 * added test that resources are served with "503 Service Unavailable" while TLS credentials
   are still incomplete.
 * disabled a pkey encryption check since it did not work as is un *NIX, fixed gcc warning
 * refcount in md_json_seta adjusted, conversion function expected to always auto-give-away
   their references. 
 * fixed refcount bug in md_json_seta() (supposedly, be optimistic for once!)
 * tls-sni-01 challenge cert and key generated, needs to be activated in mod_ssl

v0.2.0
----------------------------------------------------------------------------------------------------
 * new directive 'MDPortMap nn:mm' to announce on which local port an ACME CA might reach
   the server. This is necessary if you have redirected port 80 and/or 443 on your firefall
   to another port on the server that runs mod_md. Example:
   MDPortMap 80:5002   443:5001
   is a mapping needed for testing with a local boulder instance. If your server uses 80+443
   your need not mess with this.
 * Fixed reporting error when os does not support *nix permission bits in file system
 * MDRenewWindow parsing fixed and setting/update in store added, testcases
 * Challenge data is being removed from store when staging is done
 * configure option '--with-boulder=<url>' to specify the URL of the boulder test host (defaults
   to localhost:4000)
 * Changed default ACME CA url to letsencrypt.org staging environment when in MD_EXPERIMENTAL
   mode, adapted test outcomes to this setting
 * a2md drive command now with same checks on renewal as mod_md. New option --force to
   force a renewal that look unnecessary.
 * renew window taken into account when scheduling md watchdog
 * new directive MDRenewWindow which specifies the number of days (per default) that certificates
   should be renewed before they expire. Can be set globally or directly on a MD.
 * when run as normal user, mod_md can restart httpd after successful staging of new credentials
 * protocol driving split into staging and loading phase. a2md does both, httpd watchdog runs
   staging and on restart the staged changes are loaded.
 * security: store generates on init a master pass phrase. All private keys outside of the "domains"
   storage group are only stored encrypted.
 * filesystem store now with relaxed permissions on challenges

v0.1.0
----------------------------------------------------------------------------------------------------
 * new directive "MDDriveMode auto|manual". In "auto" mode (more precisely, if auto mode is enabled
   for any managed domain), mod_md will require mod_watchdog to be present and regularly check
   those domains and attempt to retrieve credentials if some are missing
 * drive mode "auto" lacks still various features, function- and security-wise. tbd.

v0.0.2 - v0.0.9
----------------------------------------------------------------------------------------------------
 * various development steps not recorded here
 
v0.0.1
----------------------------------------------------------------------------------------------------
 * new command 'acme validate' to check that account is still known to server and key works
 * fixed all current test failures
 * DNS names are checked for valid characters and non-TLD
 * urls are checked to be absolute for the CA
 * 'make test' now has dependency on all sources being built
 * test cases now use the binary in ./src/a2md instead of the installed one
 
