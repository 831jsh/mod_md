<?xml version="1.0"?>
<!DOCTYPE modulesynopsis SYSTEM "../style/modulesynopsis.dtd">
<?xml-stylesheet type="text/xsl" href="../style/manual.en.xsl"?>
<!-- $LastChangedRevision: 1793934 $ -->

<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at
 
 http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 -->

<modulesynopsis metafile="mod_md.xml.meta">
    
    <name>mod_md</name>
    <description>Support for the auto-configured TLS vhosts via ACME protocol</description>
    <status>Extension</status>
    <sourcefile>mod_md.c</sourcefile>
    <identifier>md_module</identifier>
    <compatibility>Available in version 2.4.17 and later</compatibility>
    
    <summary>
        <p>This module uses the ACME protocol (<a href="https://datatracker.ietf.org/doc/draft-ietf-acme-acme/">RFC Draft</a>) 
        to automate certificate issuing. It installs them on configured vhosts and monitors certificate renewal.</p>
        
        <note type="warning"><title>Warning</title>
            <p>This module is experimental. Its behaviors, directives, and 
                defaults are subject to more change from release to 
                release relative to other standard modules. Users are encouraged to 
                consult the "CHANGES" file for potential updates.</p>
        </note>

        <note type="warning"><title>Warning</title>
            <p>ToDo: List dependencies - mod_ssl modifications, OpenSSL, libcurl</p>
        </note>
        
        <p>Simple configuration example:</p>
        
        <note><title>TLS in a VirtualHost context</title>
        <highlight language="config">
ManagedDomain example.org

&lt;VirtualHost *:443&gt;
    ServerName example.org
    DocumentRoot htdocs/a

    SSLEngine on
    # no certificates specification needed!
&lt;/VirtualHost&gt;
        </highlight>
        <p>Contacts the public <a href="https://letsencrypt.org/">Let's Encrypt</a> CA server and obtains a valid certificate. 
        Installs it locally, restarts the server with valid HTTPS on this virtual host.</p>
        </note>

    </summary>
    

    <directivesynopsis>
        <name>ManagedDomain</name>
        <description>Define name list of one server certificate</description>
        <syntax>ManagedDomain hostname [ other-hostames-list ]</syntax>
        <contextlist>
            <context>server config</context>
        </contextlist>
        
        <usage>
            <p>To obtain certificates from an automated CA server, you define the context of each desired certificate as a <em>Managed Domain</em>.
            In the basic variant you just list the hostnames and use default values for other settings. 
            More complex scenarios are covered by <directive module="mod_md" type="section">ManagedDomain</directive>.
            </p>
            <p>However, for the ACME protocol to work you will at least have to provide a contact email adress and agree to the CA's terms of service.
            You can do this by providing at least the directives <directive module="mod_core">ServerAdmin</directive> and <directive module="mod_md">MDAgreement</directive>.
            </p>
            <example><title>Example</title>
                <highlight language="config">
ServerAdmin mailto:admin@example.org

MDCertificateAgreement https://letsencrypt.org/documents/LE-SA-v1.1.1-August-1-2016.pdf

ManagedDomain example.org www.example.org

&lt;VirtualHost *:443&gt;
    ServerName example.org
    DocumentRoot htdocs/root

    SSLEngine on
&lt;/VirtualHost&gt;

&lt;VirtualHost *:443&gt;
    ServerName www.example.org
    DocumentRoot htdocs/www

    SSLEngine on
&lt;/VirtualHost&gt;
                </highlight>
            </example>
        </usage>
    </directivesynopsis>

    <directivesynopsis type="section">
        <name>ManagedDomain</name>
        <description>Define properties of one server certificate</description>
        <syntax>&lt;ManagedDomain hostname&gt;...&lt;/ManagedDomain&gt;</syntax>
        <contextlist>
            <context>server config</context>
        </contextlist>
        
        <usage>
            <p>Configuration settings for <module>mod_md</module> should usually be done in the global server configuration. 
            But you can still make settings _specific_ to a particular Managed Domain.
            This allows you to e.g. have one domain from Let's Encrypt and a second from some other provider. Or also Let's Encrypt, but using another protocol (version).
            </p>
            <example><title>Example</title>
                <highlight language="config">
&lt;ManagedDomain sandbox.example.org&gt;
    MDDriveMode manual
    MDCertificateAuthority   https://someotherca.com/ACME
    MDCertificateAgreement   https://someotherca.com/terms/v_1.02.pdf
&lt;/ManagedDomain example.org&gt;
                </highlight>
            </example>
        </usage>
    </directivesynopsis>

    <directivesynopsis>
        <name>MDCertificateAgreement</name>
        <description>The location of the Terms-of-Service document, that the CA server may require you to accept.</description>
        <syntax>MDCertificateAgreement url-of-terms-of-service</syntax>
        <contextlist>
            <context>server config</context>
            <context>managed domain</context>
        </contextlist>
        <usage>
            <p>When you use <module>mod_md</module> you become a customer of the CA (e.g. Let's Encrypt) and that means you need to read and agree to their Terms of Service, so that you understand what they offer and what they might exclude or require from you. It's a legal thing.
            <module>mod_md</module> cannot, by itself, agree to such a thing. 
            <strong>You</strong> need to agree to it. For your convenience, you can tell <module>mod_md</module> that it should tell the CA that you agree.
            </p>
            <p>In case of Let's Encrypt, their current <a href="https://letsencrypt.org/documents/LE-SA-v1.1.1-August-1-2016.pdf">Terms of Service are here</a>. 
            Those terms might (and probably will) change over time. So, the certificate renewal might require you to update this agreement URL.</p>
            <example><title>Example</title>
                <highlight language="config">
MDCertificateAuthority https://acme-staging.api.letsencrypt.org/directory
MDCertificateAgreement https://letsencrypt.org/documents/LE-SA-v1.1.1-August-1-2016.pdf

ManagedDomain example.org www.example.org mail.example.org
                </highlight>
            </example>
        </usage>
    </directivesynopsis>

    <directivesynopsis>
        <name>MDCertificateAuthority</name>
        <description>The URL of the ACME CA service</description>
        <syntax>MDCertificateAuthority url-of-ACME-service</syntax>
        <default>MDCertificateAuthority https://acme-staging.api.letsencrypt.org/directory</default>
        <contextlist>
            <context>server config</context>
            <context>managed domain</context>
        </contextlist>
        <usage>
            <p>The URL where the certificate protocol can be reached.</p>
            <p>The current default value points to the Let's Encrypt _staging_ environment, which is a playground. The certificates will terefore not validate correctly in a vanilla browser window.
            When this becomes production ready, the default will be changed to ```https://acme-v01.api.letsencrypt.org/directory``` which hands out _real_ certificates.</p>
            <example><title>Example</title>
                <highlight language="config">
MDCertificateAuthority https://acme-staging.api.letsencrypt.org/directory
MDCertificateAgreement https://letsencrypt.org/documents/LE-SA-v1.1.1-August-1-2016.pdf

ManagedDomain example.org www.example.org mail.example.org
                </highlight>
            </example>
        </usage>
    </directivesynopsis>

    <directivesynopsis>
        <name>MDCertificateProtocol</name>
        <description>The protocol to be used</description>
        <syntax>MDCertificateProtocol protocol</syntax>
        <default>MDCertificateProtocol ACME</default>
        <contextlist>
            <context>server config</context>
            <context>managed domain</context>
        </contextlist>
        <usage>
            <p>Specifies the protocol used. Only <code>ACME</code> is supported for now.</p>
        </usage>
    </directivesynopsis>

    <directivesynopsis>
        <name>MDDriveMode</name>
        <description>Controls if the certificate issuing runs automatically or is started manually via command line</description>
        <syntax>MDDriveMode  auto|manual</syntax>
        <default>MDDriveMode  auto</default>
        <contextlist>
            <context>server config</context>
            <context>managed domain</context>
        </contextlist>
        <usage>
            <p><module>mod_md</module> calls it <em>driving</em> a protocol/domain to obtain the certificates. There are two separate modes: <code>auto</<code> and <code>manual</code>
            </p>
            <p>Per default drive mode <code>auto</auto>will do its best to automate everything.
            The other mode is <code>manual<code> where <module>mod_md</module> will not contact the CA itself. 
            Instead, you may use the provided command line utility <code>a2md</code> to perform this - separate from your httpd process.
            </p>
            <p><strong>Note:</strong> Drive mode <code>auto</code> requires <module>mod_watchdog</module> to be active in your server.</p>
        </usage>
    </directivesynopsis>

    <directivesynopsis>
        <name>MDMember</name>
        <description>Additional hostname for the managed domain</description>
        <syntax>MDMember hostname</syntax>
        <contextlist>
            <context>managed domain</context>
        </contextlist>
        <usage>
            <p>You can define one Managed Domain for many names and hosts. 
            When using the <directive module="mod_md" type="section">ManagedDomain</directive> group, this directive lists additional names,
            it my occur multiple times.
            The complete hostname list of the managed domain will form the value of the SAN extension field of the certificate.
            </p>
            <example><title>Example</title>
                <highlight language="config">
&lt;ManagedDomain example.org&gt;
    MDMember www.example.org
    MDMember mail.example.org
&lt;/ManagedDomain example.org&gt;
                </highlight>
            </example>
        </usage>
    </directivesynopsis>

    <directivesynopsis>
        <name>MDRenewWindow</name>
        <description></description>
        <syntax>MDRenewWindow duration-number</syntax>
        <default>MDRenewWindow 90d</default>
        <contextlist>
            <context>server config</context>
            <context>managed domain</context>
        </contextlist>
        <usage>
            <p>Certificates do expire. To make this not come as a surprise, <module>mod_md</module> monitors certificate expiry dates.
            By default, <module>mod_md</module> renew them the earliest 14 days before they expire. The directive allows to modify this duration.
            </p>
            <p>The time unit may be given as optional suffix to the numerical value. Valid values are <code>s</code>, <code>min</code>, <code>h</code> and <code>d</code>. 
            Default is <code>d</code>.
            </p>
            <example><title>Example</title>
                <highlight language="config">
MDRenewWindow 30d
                </highlight>
            </example>
        </usage>
    </directivesynopsis>

</modulesynopsis>
